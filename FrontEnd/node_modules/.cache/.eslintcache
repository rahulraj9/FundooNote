[{"/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/index.js":"1","/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/App.js":"2","/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/reportWebVitals.js":"3","/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/components/signup/Signup.jsx":"4","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/index.js":"5","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/App.js":"6","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/reportWebVitals.js":"7","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/signup/Signup.jsx":"8","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/Services/userServices.js":"9","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/Services/axiosServices.js":"10","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/signin/SignIn.jsx":"11","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ForgotPassword/ForgotPaswod.jsx":"12","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ResetPassword/ResetPassword.jsx":"13","/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/DashBoard/DashBoard.jsx":"14"},{"size":500,"mtime":1616418436975,"results":"15","hashOfConfig":"16"},{"size":201,"mtime":1616493789708,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1616418436979,"results":"18","hashOfConfig":"16"},{"size":3955,"mtime":1616566795484,"results":"19","hashOfConfig":"16"},{"size":507,"mtime":1616785820420,"results":"20","hashOfConfig":"21"},{"size":967,"mtime":1617104802137,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1616418436979,"results":"23","hashOfConfig":"21"},{"size":13289,"mtime":1617261066606,"results":"24","hashOfConfig":"21"},{"size":607,"mtime":1617167425849,"results":"25","hashOfConfig":"21"},{"size":181,"mtime":1616752368126,"results":"26","hashOfConfig":"21"},{"size":9138,"mtime":1617260863014,"results":"27","hashOfConfig":"21"},{"size":6695,"mtime":1617261155907,"results":"28","hashOfConfig":"21"},{"size":8442,"mtime":1617167497593,"results":"29","hashOfConfig":"21"},{"size":10464,"mtime":1617261399409,"results":"30","hashOfConfig":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"jheghx",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1o4ax95",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/index.js",[],["62","63"],"/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/App.js",[],"/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/reportWebVitals.js",[],"/home/rahulraj/Desktop/NodeProject/fundoo-note-frontend/src/components/signup/Signup.jsx",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/index.js",[],["64","65"],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/App.js",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/reportWebVitals.js",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/signup/Signup.jsx",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/Services/userServices.js",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/Services/axiosServices.js",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/signin/SignIn.jsx",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ForgotPassword/ForgotPaswod.jsx",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ResetPassword/ResetPassword.jsx",[],"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/DashBoard/DashBoard.jsx",["66","67","68","69","70"],"import React from \"react\";\nimport './DashBoard.css'\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport icon from \"../Assets/keepIcon.png\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    appBar: {\n        backgroundColor: \"#ffff\",\n        borderBottom: \"lightgray solid 1px\",\n        boxShadow: \"none\",\n    },\n    topBar: {\n        backgroundColor: \"#ffff\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    hide: {\n        display: \"none\",\n    },\n\n    appBarButton: {\n        [theme.breakpoints.down(\"xs\")]: {\n            padding: \"8px 8px 8px 8px\"\n        },\n    },\n    drawer: {\n        top: \"70px\",\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: \"230px\",\n        borderRight: \"lightgray solid 1px\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"180px\",\n        },\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        borderRight: \"none\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(8) + 1,\n        },\n    },\n    drawerButton: {\n        borderTopRightRadius: \"70px\",\n        borderBottomRightRadius: \"70px\",\n        borderTopLeftRadius: \"70px\",\n        borderBottomLeftRadius: \"70px\",\n\n    },\n\n\n}));\n\nexport default function Dashboard(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [note, setNote] = React.useState(true)\n    const [reminder, setReminder] = React.useState(false)\n    const [editLabel, setEditLabel] = React.useState(false)\n    const [archive, setArchive] = React.useState(false)\n    const [bin, setBin] = React.useState(false)\n\n    const drawerOpen = () => {\n        setOpen(true);\n    };\n    const drawerClose = () => {\n        setOpen(false);\n    };\n\n    const drawerOpenClose = () => {\n        setOpen(!open);\n    };\n\n\n    return (\n        <div className={classes.root} >\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar className={classes.topBar}>\n                    <span >\n                        < div className=\"startOptions\">\n                            <div>\n                                <IconButton className={classes.appBarButton} onClick={drawerOpenClose} edge=\"start\">\n                                    <MenuIcon />\n                                </IconButton>\n                            </div>\n                            <div>\n                                <img className=\"headerIcon\" src={icon} alt=\"Fundoo Icon\" />\n                            </div>\n                            <div className=\"headerTitle\">Fundoo</div>\n                            <div className=\"search\">\n                                <div className=\"searchIcon\">\n                                    <div className=\"searchIcon\">\n                                        <SearchIcon />\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                    </span>\n                </Toolbar>\n            </AppBar>\n\n                <div>\n                    <Drawer\n                        onMouseOver={drawerOpen}\n                        onMouseLeave={drawerClose}\n                        variant=\"permanent\"\n                        color=\"transparent\"\n\n                        className={clsx(classes.drawer, {\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        })}\n                        classes={{\n                            paper: clsx(classes.drawer, {\n                                [classes.drawerOpen]: open,\n                                [classes.drawerClose]: !open,\n                            }),\n                        }}\n                    >\n                        <div className=\"drawerList\">\n                            <List>\n                                <div className=\"drawerButton\">\n                                    <ListItem\n                                        button\n                                        className={classes.drawerButton}\n                                        style={{ backgroundColor: note ? \"#feefc3\" : \"transparent\" }}\n\n                                    >\n                                        <ListItemIcon>\n                                            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\">\n                                                <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 0 1 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\"></path>\n                                            </svg>\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Notes\" />\n                                    </ListItem>\n                                </div>\n\n                                <div className=\"drawerButton\">\n                                    <ListItem\n                                        button\n                                        className={classes.drawerButton}\n                                        style={{ backgroundColor: reminder ? \"#feefc3\" : \"transparent\" }}\n\n                                    >\n                                        <ListItemIcon>\n                                            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\">\n                                                <path d=\"M18 17v-6c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v6H4v2h16v-2h-2zm-2 0H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zm-4 5c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2z\"></path>\n                                            </svg>\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Reminder\" />\n                                    </ListItem>\n                                </div>\n\n                                {/*  */}\n\n                                <div className=\"drawerButton\">\n                                    <ListItem\n                                        button\n                                        className={classes.drawerButton}\n                                        style={{ backgroundColor: editLabel ? \"#feefc3\" : \"transparent\" }}\n\n                                    >\n                                        <ListItemIcon>\n                                            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\">\n                                                <path d=\"M20.41 4.94l-1.35-1.35c-.78-.78-2.05-.78-2.83 0L13.4 6.41 3 16.82V21h4.18l10.46-10.46 2.77-2.77c.79-.78.79-2.05 0-2.83zm-14 14.12L5 19v-1.36l9.82-9.82 1.41 1.41-9.82 9.83z\"></path>\n                                            </svg>\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Edit labels\" />\n                                    </ListItem>\n                                </div>\n\n                                <div className=\"drawerButton\">\n                                    <ListItem\n                                        button\n                                        className={classes.drawerButton}\n                                        style={{ backgroundColor: archive ? \"#feefc3\" : \"transparent\" }}\n\n                                    >\n                                        <ListItemIcon>\n                                            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\">\n                                                <path d=\"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z\"></path>\n                                            </svg>\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Archive\" />\n                                    </ListItem>\n                                </div>\n\n                                <div className=\"drawerButton\">\n                                    <ListItem\n                                        button\n                                        className={classes.drawerButton}\n                                        style={{ backgroundColor: bin ? \"#feefc3\" : \"transparent\" }}\n\n                                    >\n                                        <ListItemIcon>\n                                            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\">\n                                                <path d=\" M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z\"></path>\n                                            </svg>\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Bin\" />\n                                    </ListItem>\n                                </div>\n                            </List>\n                        </div>\n                    </Drawer>\n                </div>\n                <h1>DashBoard</h1>\n        </div>\n    );\n}\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":85,"column":18,"nodeType":"79","messageId":"80","endLine":85,"endColumn":25},{"ruleId":"77","severity":1,"message":"81","line":86,"column":22,"nodeType":"79","messageId":"80","endLine":86,"endColumn":33},{"ruleId":"77","severity":1,"message":"82","line":87,"column":23,"nodeType":"79","messageId":"80","endLine":87,"endColumn":35},{"ruleId":"77","severity":1,"message":"83","line":88,"column":21,"nodeType":"79","messageId":"80","endLine":88,"endColumn":31},{"ruleId":"77","severity":1,"message":"84","line":89,"column":17,"nodeType":"79","messageId":"80","endLine":89,"endColumn":23},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"no-unused-vars","'setNote' is assigned a value but never used.","Identifier","unusedVar","'setReminder' is assigned a value but never used.","'setEditLabel' is assigned a value but never used.","'setArchive' is assigned a value but never used.","'setBin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]