{"ast":null,"code":"var _jsxFileName = \"/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ResetPassword/ResetPassword.jsx\";\nimport React from 'react';\nimport './ResetPassword.css';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport services from '../../Services/userServices';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst service = new services();\n\nclass ResetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clickShowPass = () => {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.validate = () => {\n      let isError = false;\n      this.setState({\n        passwordFlag: false\n      });\n      this.setState({\n        passwordErrorMsg: \"\"\n      });\n      this.setState({\n        confirmPasswordFlag: false\n      });\n      this.setState({\n        confirmPasswordErrorMsg: \"\"\n      });\n      /**\n       * @description : Validation for password\n       */\n\n      if (this.state.password.length === 0) {\n        this.setState({\n          passwordFlag: true\n        });\n        this.setState({\n          passwordErrorMsg: \"Enter a password\"\n        });\n        isError = true;\n      }\n\n      if (this.state.password.length > 11) {\n        this.setState({\n          passwordFlag: true\n        });\n        this.setState({\n          passwordErrorMsg: \"password is too long\"\n        });\n        isError = true;\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          confirmPasswordFlag: true\n        });\n        this.setState({\n          confirmPasswordErrorMsg: \"Passwords didn't match\"\n        });\n        isError = true;\n      }\n\n      return isError;\n    };\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.onSubmit = e => {\n      const err = this.validate();\n\n      if (!err) {\n        console.log(\"calling api\");\n        let forgetData = {\n          password: this.state.password\n        };\n        console.log(forgetData);\n        let token = this.props.match.params.token;\n        console.log(token);\n        service.resetPass(forgetData, token).then(responseReceived => {\n          if (responseReceived) {\n            console.log(\"res\", responseReceived.data.message);\n            this.setState({\n              snackType: \"success\",\n              snackMessage: responseReceived.data.message,\n              open: true,\n              setOpen: true\n            });\n            setTimeout(() => {\n              this.nextPath('/login');\n            }, 2000);\n          } else {\n            this.setState({\n              snackType: \"error\",\n              snackMessage: responseReceived.data.message,\n              open: true,\n              setOpen: true\n            });\n          }\n        }).catch(error => {\n          console.log(\"resetPass Failed\" + error.response.data.message);\n          this.setState({\n            snackType: \"error\",\n            snackMessage: error.response.data.message,\n            open: true,\n            setOpen: true\n          });\n        });\n      } else {\n        console.log(\"reg failed\");\n        this.setState({\n          snackType: \"error\",\n          snackMessage: \"Password Submission Failed\",\n          open: true,\n          setOpen: true\n        });\n      }\n    };\n\n    this.state = {\n      password: \"\",\n      passwordFlag: false,\n      passwordErrorMsg: \"\",\n      confirmPassword: \"\",\n      confirmPasswordFlag: false,\n      confirmPasswordErrorMsg: \"\",\n      snackMessage: \"\",\n      snackType: \"\",\n      setOpen: false,\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgetContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgetContainerBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgetContainerHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forgetInlineTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [/*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#1976d2\",\n                children: \"F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#e53935\",\n                children: \"u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#ffb74d\",\n                children: \"n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#1976d2\",\n                children: \"d\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#388e3c\",\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n                color: \"#e53935\",\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgetContainerHeaderText\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgetContainerHeaderText1\",\n            children: \"Use your Fundoo Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formInput\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"formInputField\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"password\",\n                    value: this.state.password,\n                    helperText: this.state.passwordErrorMsg,\n                    error: this.state.passwordFlag,\n                    onChange: e => this.change(e),\n                    id: \"password\",\n                    label: \"Password\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    type: this.state.showPassword ? \"text\" : \"password\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formInput\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"formInputField\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"confirmPassword\",\n                    value: this.state.confirmPassword,\n                    helperText: this.state.confirmPasswordErrorMsg,\n                    error: this.state.confirmPasswordFlag,\n                    onChange: e => this.change(e),\n                    label: \"confirm password\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    type: this.state.showPassword ? \"text\" : \"password\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkBoxInputs\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  className: \"showPass\",\n                  onClick: this.clickShowPass\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), \"Show Password\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footerButtonsSign\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"signInLink\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"SignIn Instead\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nextButton\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: this.onSubmit,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          autoHideDuration: 3000,\n          open: this.state.open,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: this.state.snackType,\n            children: this.state.snackMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/components/ResetPassword/ResetPassword.jsx"],"names":["React","TextField","Checkbox","Button","services","Snackbar","MuiAlert","Alert","props","service","ResetPassword","Component","constructor","clickShowPass","setState","showPassword","state","change","e","target","name","value","console","log","validate","isError","passwordFlag","passwordErrorMsg","confirmPasswordFlag","confirmPasswordErrorMsg","password","length","confirmPassword","nextPath","path","history","push","onSubmit","err","forgetData","token","match","params","resetPass","then","responseReceived","data","message","snackType","snackMessage","open","setOpen","setTimeout","catch","error","response","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ResetPassword.css'\n\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\n\nimport services from '../../Services/userServices'\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from '@material-ui/lab/Alert';\nfunction Alert(props) {\n    return <MuiAlert variant=\"filled\" {...props} />;\n}\n\n\nconst service = new services()\n\nclass ResetPassword extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n\n\n            password: \"\",\n            passwordFlag: false,\n            passwordErrorMsg: \"\",\n\n            confirmPassword: \"\",\n            confirmPasswordFlag: false,\n            confirmPasswordErrorMsg: \"\",\n\n            snackMessage: \"\",\n            snackType: \"\",\n            setOpen: false,\n            open: false\n\n        }\n    }\n    clickShowPass = () => {\n        this.setState({\n            showPassword: !this.state.showPassword,\n        });\n    };\n\n\n    change = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log(e.target.value);\n    }\n\n    validate = () => {\n        let isError = false\n\n        this.setState({ passwordFlag: false })\n        this.setState({ passwordErrorMsg: \"\" })\n        this.setState({ confirmPasswordFlag: false })\n        this.setState({ confirmPasswordErrorMsg: \"\" })\n\n\n        /**\n         * @description : Validation for password\n         */\n\n        if (this.state.password.length === 0) {\n            this.setState({ passwordFlag: true })\n            this.setState({ passwordErrorMsg: \"Enter a password\" })\n            isError = true\n        }\n\n        if (this.state.password.length > 11) {\n            this.setState({ passwordFlag: true })\n            this.setState({ passwordErrorMsg: \"password is too long\" })\n            isError = true\n        }\n\n        if (this.state.password !== this.state.confirmPassword) {\n            this.setState({ confirmPasswordFlag: true })\n            this.setState({ confirmPasswordErrorMsg: \"Passwords didn't match\" })\n            isError = true\n\n        }\n        return isError\n    }\n\n    nextPath =(path)=>{\n        this.props.history.push(path)\n    }\n\n    onSubmit = (e) => {\n        const err = this.validate();\n        if (!err) {\n            console.log(\"calling api\");\n            let forgetData = {\n                password: this.state.password,\n            };\n            console.log(forgetData)\n            let token = this.props.match.params.token;\n            console.log(token)\n            service.resetPass(forgetData,token).then((responseReceived) => {\n                if (responseReceived) {\n                    console.log(\"res\", responseReceived.data.message)\n                    this.setState({ snackType: \"success\", snackMessage: responseReceived.data.message, open: true, setOpen: true })\n                    setTimeout(() => {  this.nextPath('/login'); }, 2000);\n                }\n                else {\n                    this.setState({ snackType: \"error\", snackMessage: responseReceived.data.message, open: true, setOpen: true })\n                }\n\n\n            }).catch((error) => {\n                console.log(\"resetPass Failed\" + error.response.data.message);\n                this.setState({ snackType: \"error\", snackMessage: error.response.data.message, open: true, setOpen: true })\n            })\n        }\n        else {\n            console.log(\"reg failed\")\n            this.setState({ snackType: \"error\", snackMessage: \"Password Submission Failed\", open: true, setOpen: true })\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"forgetContainer\">\n                <div className=\"forgetContainerBox\">\n                    <div className=\"forgetContainerHeader\">\n                        <span className=\"forgetInlineTitle\">\n                            <b>\n                                <font color=\"#1976d2\">F</font>\n                                <font color=\"#e53935\">u</font>\n                                <font color=\"#ffb74d\">n</font>\n                                <font color=\"#1976d2\">d</font>\n                                <font color=\"#388e3c\">o</font>\n                                <font color=\"#e53935\">o</font>\n                            </b>\n                        </span>\n                        <div className=\"forgetContainerHeaderText\">Reset Password</div>\n                        <div className=\"forgetContainerHeaderText1\">Use your Fundoo Account</div>\n                        <div className=\"formContainer\">\n                            <form className=\"form\">\n\n\n\n                                <div className=\"formInput\">\n                                    <div className=\"formInputField\">\n                                        <TextField\n                                            name=\"password\"\n                                            value={this.state.password}\n                                            helperText={this.state.passwordErrorMsg}\n                                            error={this.state.passwordFlag}\n                                            onChange={(e) => this.change(e)}\n                                            id=\"password\"\n                                            label=\"Password\"\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            type={this.state.showPassword ? \"text\" : \"password\"}\n                                            fullWidth />\n                                    </div>\n                                </div>\n                                <div className=\"formInput\">\n                                    <div className=\"formInputField\">\n                                        <TextField\n                                            name=\"confirmPassword\"\n                                            value={this.state.confirmPassword}\n                                            helperText={this.state.confirmPasswordErrorMsg}\n                                            error={this.state.confirmPasswordFlag}\n                                            onChange={(e) => this.change(e)}\n                                            label=\"confirm password\"\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            type={this.state.showPassword ? \"text\" : \"password\"}\n                                            fullWidth />\n                                    </div>\n                                </div>\n\n\n                                <span className=\"checkBoxInputs\">\n                                    <Checkbox\n                                        color=\"primary\"\n                                        className=\"showPass\"\n                                        onClick={this.clickShowPass}\n                                    />\n                                    Show Password\n                                </span>\n\n\n\n                                <div className=\"footerButtonsSign\">\n                                    <div className=\"signInLink\">\n                                        <Button\n                                            color=\"primary\">\n                                            <b>SignIn Instead</b>\n                                        </Button>\n                                    </div>\n                                    <div className=\"nextButton\">\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                    </div>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                    <Snackbar\n                        autoHideDuration={3000}\n                        open={this.state.open}>\n                        <Alert severity={this.state.snackType}>\n                            {this.state.snackMessage}\n                        </Alert>\n\n                    </Snackbar>\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default ResetPassword;\n\n\n"]},"metadata":{},"sourceType":"module"}