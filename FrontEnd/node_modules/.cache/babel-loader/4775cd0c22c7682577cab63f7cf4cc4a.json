{"ast":null,"code":"import Axios from \"./axiosServices\";\nconst http = new Axios();\nconst baseUrl = \"http://localhost:8000/user\";\nexport default class services {\n  constructor() {\n    this.Registration = data => {\n      return http.Post(`${baseUrl}/registration`, data);\n    };\n\n    this.login = data => {\n      return http.Post(`${baseUrl}/login`, data);\n    };\n\n    this.forgetPass = data => {\n      return http.Post(`${baseUrl}/forgetpassword`, data);\n    };\n\n    this.resetPass = (data, token) => {\n      return http.Post(`${baseUrl}/resetPassword/:token`, data, {\n        headers: {\n          token: token\n        }\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/rahulraj/Desktop/NodeProject/FunDOO NOTE/FrontEnd/src/Services/userServices.js"],"names":["Axios","http","baseUrl","services","Registration","data","Post","login","forgetPass","resetPass","token","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,MAAMC,IAAI,GAAG,IAAID,KAAJ,EAAb;AAEA,MAAME,OAAO,GAAG,4BAAhB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAAA;AAAA,SAC1BC,YAD0B,GACVC,IAAD,IAAU;AACrB,aAAOJ,IAAI,CAACK,IAAL,CAAW,GAAEJ,OAAQ,eAArB,EAAqCG,IAArC,CAAP;AACH,KAHyB;;AAAA,SAI1BE,KAJ0B,GAIjBF,IAAD,IAAU;AACd,aAAOJ,IAAI,CAACK,IAAL,CAAW,GAAEJ,OAAQ,QAArB,EAA8BG,IAA9B,CAAP;AACH,KANyB;;AAAA,SAO1BG,UAP0B,GAOZH,IAAD,IAAU;AACnB,aAAOJ,IAAI,CAACK,IAAL,CAAW,GAAEJ,OAAQ,iBAArB,EAAuCG,IAAvC,CAAP;AACH,KATyB;;AAAA,SAU1BI,SAV0B,GAUd,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AACzB,aAAOT,IAAI,CAACK,IAAL,CAAW,GAAEJ,OAAQ,uBAArB,EAA6CG,IAA7C,EAAmD;AACtDM,QAAAA,OAAO,EAAE;AACLD,UAAAA,KAAK,EAAEA;AADF;AAD6C,OAAnD,CAAP;AAKH,KAhByB;AAAA;;AAAA","sourcesContent":["import Axios from \"./axiosServices\";\n\nconst http = new Axios();\n\nconst baseUrl = \"http://localhost:8000/user\";\n\nexport default class services {\n    Registration = (data) => {\n        return http.Post(`${baseUrl}/registration`, data);\n    };\n    login = (data) => {\n        return http.Post(`${baseUrl}/login`, data);\n    }\n    forgetPass = (data) => {\n        return http.Post(`${baseUrl}/forgetpassword`, data);\n    }\n    resetPass = (data, token) => {\n        return http.Post(`${baseUrl}/resetPassword/:token`, data, {\n            headers: {\n                token: token\n            }\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}